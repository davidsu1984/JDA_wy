<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
   "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap>
	<!-- 通过typeAlias使得我们在下面使用Student实体类的时候不需要写包名 -->
	<typeAlias alias="Biotope" type="com.pm.pojo.Biotope" />

	<!-- 这样以后改了sql，就不需要去改java代码了 -->
	<!-- id表示select里的sql语句，resultClass表示返回结果的类型 -->
	<select id="selectAllBiotope" resultClass="Biotope">
		select * from tbl_Biotope
	</select>

	<!-- parameterClass表示参数的内容 -->
	<!-- #表示这是一个外部调用的需要传进的参数，可以理解为占位符 -->
	<select id="selectBiotopeById" parameterClass="String" resultClass="Biotope">
		select BiotopeID,BBiotopeName,BPropertyID,BAddress,BBeginYear from tbl_biotope
		where BiotopeID = #id#
	</select>


	<insert id="addBiotope" parameterClass="Biotope">
		insert into tbl_biotope(BiotopeID,BBiotopeName,BPropertyID,BAddress,BBeginYear)
		values(#BBiotopeName#,#BPropertyID#,#BAddress#,#BBeginYear#)
	</insert>

	<delete id="deleteBiotopeById" parameterClass="String">
		<!-- #id#里的id可以随意取，但是上面的insert则会有影响，因为上面的name会从Student里的属性里去查找 -->
		<!-- 我们也可以这样理解，如果有#占位符，则ibatis会调用parameterClass里的属性去赋值 -->
		delete from tbl_biotope where BiotopeID = #id#
	</delete>

	<update id="updateBiotope" parameterClass="Biotope">
		update tbl_biotope set BBiotopeName = #BBiotopeName#,BPropertyID = #BPropertyID#,BAddress = #BAddress#,BBeginYear = #BBeginYear#
		where BiotopeID = #id#
	</update>

</sqlMap>